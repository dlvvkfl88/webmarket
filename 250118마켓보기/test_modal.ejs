<div class="modal_con">
    <div class="modal_header">
        <h2>물품 정보 입력</h2>
        <button id="modalCloseBtn" class="btn_none green_borderBtn">
            <img src="/images/X_icon.png">
        </button>
    </div>
    <div class="modal_body">
        <div class="form_wrap">
            <!-- 구분 -->
            <div class="form_request">
                <label for="구분">
                    구분
                    <span class="point_txt">* 필수</span>
                </label>
                <div class="sortation_btn">
                    <button id="reuseBtn">재사용 비품</button>
                    <button id="shareBtn">나눔 물품</button>
                </div>
            </div>
            <!-- 구분 -->

            <!-- 사진 / 파일 첨부 -->
            <div class="form_request">
                <div class="pic_wrap pic_left">
                    <label for="사진 / 파일첨부">사진 / 파일첨부<span class="point_txt">* 필수</span></label>
                    <div class="pic_btn">
                        <button class="btn_none picture_btn">사진 첨부</button>
                        <div class="upload-wrapper">
                            <input name='setShareImage' type="file" class="real-share-upload" accept="image/*" required multiple style="display: none;" />
                            <button class="btn_upload" onclick="uploadShareImage()">파일 첨부</button>
                        </div>
                    </div>
                </div>
                <div class="pic_wrap pic_right">
                    <img id="imgSharePreview" src="/images/Picture_img.png">
                    <p class="file_size">jpg, png 이미지 파일</p>
                </div>
            </div>
            <!-- 사진 / 파일 첨부 -->
            <div class="form_group border_bott">
                <div class="uploadImg">
                    <ul id="imgShareSet1" class="image-preview"></ul>
                    <ul id="imgShareSet2" class="image-preview"></ul>
                    <ul id="imgShareSet3" class="image-preview"></ul>
                </div>
            </div>
            <!-- 제목 -->
            <div class="form_request">
                <label for="제목">제목<span class="point_txt">* 필수</span></label>
                <input id="createReusable_Name" class="Direct_input" placeholder="제목을 입력해주세요.">
            </div>
            <!-- 제목 -->

            <!-- 내용 -->
            <div class="form_request">
                <label for="내용">내용<span class="point_txt">* 필수</span></label>
                <textarea class="Direct_input" id="createShareMemo" rows="10" placeholder="내용을 입력해주세요."></textarea>
            </div>
            <!-- 내용 -->


            <!-- 버튼 클릭 시 추가 내용 -->
            <div id="addContent"></div>
            <!-- 버튼 클릭 시 추가 내용 -->
        </div>
        <div class="btn_wrap">
            <div class="req_Btn">
                <button type="submit" id="okBtn" name="okBtn" onclick="createShareData()">등록 완료</button>
                <button type="reset" id="modalCancelBtn" class="modalCancelBtn">닫기</button>
            </div>
        </div>
    </div>
</div>

<script>
        // 버튼 및 영역 가져오기
        const reuseBtn = document.getElementById('reuseBtn');
        const shareBtn = document.getElementById('shareBtn');
        const addContent = document.getElementById('addContent');

        // 초기 상태: 추가 영역 비움
        addContent.innerHTML = "";

        // 공통 HTML (재사용 비품과 나눔 물품의 다른 부분)
        const reuseContent = `
        <div class="form_request">
            <label for="등급">물품등급<span class="point_txt">* 필수</span></label>
            <select id="createReusable_Rank" name="createReusable_Rank" class="Direct_input">
                <option value="0" selected="">선택</option>
                <option value="1">A</option>
                <option value="2">B</option>
                <option value="3">C</option>
                <option value="4">D</option>
            </select>
        </div>
        <div class="info_text">
            <ul>
                <li><p>물품등급 안내</p></li>
                <li>
                    <p class="p01">A 등급</p>
                    <p class="p02">최근 불용한 물품으로, 신품과 유사한 상태의 물품</p>
                </li>
                <li>
                    <p class="p01">B 등급</p>
                    <p class="p02">약간의 사용감이 있는 상태의 물품</p>
                </li>
                <li>
                    <p class="p01">C 등급</p>
                    <p class="p02">사용하기에 문제가 없으나, 외관상 약간의 하자가 있는 물품</p>
                </li>
                <li>
                    <p class="p01">D 등급</p>
                    <p class="p02">수리불가, 불용</p>
                </li>
            </ul>
        </div>
        <div class="form_request flex_column">
            <label for="수령 정보">수령 정보<span class="point_txt">* 필수</span></label>
            <div class="fix_flexbetween text">
                <label for="수령 위치">수령 위치</label>
                <input id="createReusable_Place" class="Direct_input" placeholder="수령 위치를 입력해 주세요.">
            </div>
            <div class="fix_flexbetween text">
                <label for="이메일">이메일</label>
                <input id="createReusable_userEmail" class="Direct_input" placeholder="이메일을 입력해 주세요.">
            </div>
            <div class="fix_flexbetween text">
                <label for="연락처">연락처</label>
                <input id="createReusable_userPhone" class="Direct_input" placeholder="연락처를 입력해 주세요.">
            </div>
            <div class="fix_flexbetween text">
                <label for="기타">기타(선택)</label>
                <input id="createReusable_etc" class="Direct_input" placeholder="기타 사항을 입력해 주세요.">
            </div>
        </div>
        <div class="form_request flex_column">
            <div class="fix_flexbetween">
                <label for="비품 선택">비품 선택<span class="point_txt">* 필수</span></label>
                <button class="green_btn02" onclick="CheckMyItems()">물품 조회</button>
            </div>
            <div class="fix_flexbetween text">
                <label for="물품명">물품명</label>
                <input id="createReusable_FixtureName" class="Auto_input" disabled>
            </div>
            <div class="fix_flexbetween text">
                <label for="취득금액">취득금액</label>
                <input id="createReusable_FixturePrice" class="Auto_input" disabled>
            </div>
            <div class="fix_flexbetween text">
                <label for="취득일자">취득일자</label>
                <input id="createReusable_FixtureDate" class="Auto_input" disabled>
            </div>
            <div class="fix_flexbetween text">
                <label for="물품번호">물품번호</label>
                <input id="createReusable_FixtureNo" class="Auto_input" disabled>
            </div>
        </div>
        </div>
        <div class="form_request flex_column">
            <div class="checkbox_container">
                <input type="checkbox" id="confirmCheckbox" class="checkbox_input">
                <label for="confirmCheckbox" class="checkbox_label">
                    IT 기기 및 저장 장치의 데이터 및 비밀번호를 초기화했음을 확인합니다.
                </label>
            </div>
        </div>
        `;

        const shareContent = `
        <div class="form_request">
            <label for="등급">물품등급<span class="point_txt">* 필수</span></label>
            <select id="createReusable_Rank" name="createReusable_Rank" class="Direct_input">
                <option value="0" selected="">선택</option>
                <option value="1">A</option>
                <option value="2">B</option>
                <option value="3">C</option>
            </select>
        </div>
        <div class="info_text">
            <ul>
                <li><p>물품등급 안내</p></li>
                <li>
                    <p class="p01">A 등급</p>
                    <p class="p02">최근 불용한 물품으로, 신품과 유사한 상태의 물품</p>
                </li>
                <li>
                    <p class="p01">B 등급</p>
                    <p class="p02">약간의 사용감이 있는 상태의 물품</p>
                </li>
                <li>
                    <p class="p01">C 등급</p>
                    <p class="p02">사용하기에 문제가 없으나, 외관상 약간의 하자가 있는 물품</p>
                </li>
            </ul>
        </div>
        <div class="form_request flex_column">
            <label for="수령 정보">수령 정보<span class="point_txt">* 필수</span></label>
            <div class="fix_flexbetween text">
                <label for="수령 위치">수령 위치</label>
                <input id="createReusable_Place" class="Direct_input" placeholder="수령 위치를 입력해 주세요.">
            </div>
            <div class="fix_flexbetween text">
                <label for="이메일">이메일</label>
                <input id="createReusable_userEmail" class="Direct_input" placeholder="이메일을 입력해 주세요.">
            </div>
            <div class="fix_flexbetween text">
                <label for="연락처">연락처</label>
                <input id="createReusable_userPhone" class="Direct_input" placeholder="연락처를 입력해 주세요.">
            </div>
            <div class="fix_flexbetween text">
                <label for="기타">기타(선택)</label>
                <input class="Direct_input" placeholder="기타 사항을 입력해 주세요.">
            </div>
        </div>
        </div>
        <div class="form_request flex_column">
            <p class="info_txt">
                비품이 아닌 물품만 등록 가능합니다.<br>
                잘못 등록된 물품에 대한 책임을 등록자에게 있습니다.
            </p>
            <div class="checkbox_container">
                <input type="checkbox" id="confirmCheckbox" class="checkbox_input">
                <label for="confirmCheckbox" class="checkbox_label">
                    본 물품을 고려대학교 물품번호가 부여된 비품이 아님을 확인합니다.
                </label>
            </div>
            <div class="checkbox_container">
                <input type="checkbox" id="confirmCheckbox" class="checkbox_input">
                <label for="confirmCheckbox" class="checkbox_label">
                    IT 기기 및 저장 장치의 데이터 및 비밀번호를 초기화했음을 확인합니다.
                </label>
            </div>
        </div>
        `;

        // 초기 버튼 상태 해제
        reuseBtn.classList.remove('active');
        shareBtn.classList.remove('active');

        // 버튼 클릭 이벤트
        reuseBtn.addEventListener('click', () => {
            resetAllInputs();
            reuseBtn.classList.add('active');
            shareBtn.classList.remove('active');
            resetImagePreviews();
            addContent.innerHTML = reuseContent;
        });

        shareBtn.addEventListener('click', () => {
            resetAllInputs();
            shareBtn.classList.add('active');
            reuseBtn.classList.remove('active');
            resetImagePreviews();
            addContent.innerHTML = shareContent;
        });

        //open popup
        function CheckMyItems() {
            const popupOptions = 'width=1200,height=750,scrollbars=yes,resizable=yes';
            window.open('CheckMyItems_Popup', 'ApprovalPopup', popupOptions);
        }

        //사진만들기 로직 여기는 내가 추가 한 부분  //
        var reusableImg = [];
        var reusableImgBin = [];
        var imgCnt = 0;


        function createImageElement(e, file) {
            const li = document.createElement('li');
            const img = document.createElement('img');
            img.setAttribute('src', e.target.result);
            img.setAttribute('data-file', file.name);
            
            img.setAttribute('height', 75);
            img.setAttribute('width', 75);

            li.setAttribute("id", "prev"+ (imgCnt + 1))
            li.appendChild(img);

            imgCnt++;

            //console.log("file",file);
            //console.log("target",e.target);

            reusableImg.push(file.name);
            reusableImgBin.push(e.target.result);

            return li;
        }

        function createImageElement_Modal(path, bin,count) {
            const li = document.createElement('li');
            const img = document.createElement('img');
            img.setAttribute('src', bin);
            img.setAttribute('data-file', path);
            
            img.setAttribute('height', 250);
            img.setAttribute('width', 250);

            li.setAttribute("id", "prev"+ (count + 1))
            li.appendChild(img);

            return li;
        }

        function getShareImageFiles(e) {
            const uploadFiles = [];
            const files = e.currentTarget.files;

            if ([...files].length >= 4) {
                alert('이미지는 최대 3개 까지 업로드가 가능합니다.');
                return;
            }

            // 기존 이미지 초기화
            resetImagePreviews();
            
            // 배열 초기화
            reusableImg = [];
            reusableImgBin = [];

            // 파일 타입 검사
            [...files].forEach((file, index) => {
                if (!file.type.match("image/.*")) {
                    alert('이미지 파일만 업로드가 가능합니다.');
                    return;
                }

                if (index < 3) { // 최대 3개까지만 처리
                    uploadFiles.push(file);
                    const reader = new FileReader();
                    reader.onload = (e) => {
                        const currentIndex = index + 1; // imgCnt 대신 index 사용
                        const preview = createImageElement(e, file);
                        const remove_li = document.createElement('li');
                        const remove_img = document.createElement('img');
                        remove_img.setAttribute('src', './images/assets/upload_del.png');
                        remove_li.setAttribute("id", "remove" + currentIndex);
                        remove_li.setAttribute("onclick", `removeShareImg${currentIndex}()`);
                        remove_li.appendChild(remove_img);

                        // 이미지를 적절한 위치에 추가
                        const targetPreview = document.getElementById(`imgShareSet${currentIndex}`);
                        if (targetPreview) {
                            targetPreview.appendChild(preview);
                            targetPreview.appendChild(remove_li);
                        }

                        // 배열에 추가
                        reusableImg[index] = file.name;
                        reusableImgBin[index] = e.target.result;
                    };
                    reader.readAsDataURL(file);
                }
            });
            
            imgCnt = Math.min(files.length, 3); // 이미지 카운트 업데이트
        }

        const realShareUpload = document.querySelector('.real-share-upload');

        function uploadShareImage() {
            document.querySelector('.real-share-upload').click();
        }

        realShareUpload.addEventListener('change', getShareImageFiles);

        function removeShareImg1()
        {
            $("#imgShareSet1").remove();
            $("#remove1").remove();
        }

        function removeShareImg2()
        {
            $("#imgShareSet2").remove();
            $("#remove2").remove();
        }

        function removeShareImg3()
        {
            $("#imgShareSet3").remove();
            $("#remove3").remove();
        }

        function createShareData() {
            const isReuse = document.getElementById('reuseBtn').classList.contains('active');
            const endpoint = isReuse ? '/create_reusable' : '/create_reusable_new';
            
            // 이미지 체크
            if(imgCnt == 0) {
                alert("사진을 추가해 주세요.");
                return;
            }

            // 체크박스 검증 추가
            const checkboxes = document.querySelectorAll('.checkbox_input');
            const uncheckedBoxes = Array.from(checkboxes).filter(checkbox => !checkbox.checked);
            if (uncheckedBoxes.length > 0) {
                alert("모든 필수 항목에 동의해주세요.");
                return;
            }

            // 필수 입력값 검증
            const requiredFields = {
                "물품등급": document.getElementById("createReusable_Rank").selectedIndex,
                "제목": document.getElementById("createReusable_Name").value,
                "내용": document.getElementById("createShareMemo").value,
                "수령 위치": document.getElementById("createReusable_Place").value,
                "이메일": document.getElementById("createReusable_userEmail").value,
                "연락처": document.getElementById("createReusable_userPhone").value
            };

            for (const [fieldName, value] of Object.entries(requiredFields)) {
                if (!value) {
                    alert(`${fieldName}을(를) 입력해주세요.`);
                    return;
                }
            }

            // 재사용 비품인 경우 추가 검증
            if (isReuse) {
                const fixtureNo = document.getElementById("createReusable_FixtureNo").value;
                if (!fixtureNo) {
                    alert("물품 조회를 통해 비품을 선택해주세요.");
                    return;
                }
            }

            console.log("createShareData 1");

            var createShareType = "";

            var selReusable_Rank = document.getElementById("createReusable_Rank");

            if(selReusable_Rank.selectedIndex == 0){
                alert("물품등급을 선택해 주세요.");
                return;
            }

            var createReusable_Name = document.getElementById ("createReusable_Name").value;

            console.log("createShareData 2");

            var createShareMemo = document.getElementById ("createShareMemo").value;

            console.log("createShareData 3");

            var createReusable_Place = document.getElementById ("createReusable_Place").value;

            console.log("createShareData 4");

            var createReusable_Content = document.getElementById ("createReusable_Name").value;

            console.log("createShareData 5");

            var user_email = document.getElementById ("createReusable_userEmail").value;

            console.log("createShareData 6");

            var user_phone = document.getElementById ("createReusable_userPhone").value;

            console.log("createShareData 7");

            var createReusable_Rank = selReusable_Rank.selectedIndex;

            var createReusable_FixtureName = isReuse ? document.getElementById("createReusable_FixtureName").value : ""; 
            var createReusable_FixturePrice = isReuse ? document.getElementById("createReusable_FixturePrice").value : ""; 
            var createReusable_FixtureDate = isReuse ? document.getElementById("createReusable_FixtureDate").value : ""; 
            var createReusable_FixtureNo = isReuse ? document.getElementById("createReusable_FixtureNo").value : ""; 

            var jdata = {
                'reusable_name': createReusable_Name,
                'reusable_type': '',
                'reusable_contnet': createReusable_Content,
                'reusable_memo': createShareMemo,
                'reusable_place': createReusable_Place,
                'reusable_rank': createReusable_Rank,
                'user_email': user_email,
                'user_phone': user_phone,
                'fixture_no': createReusable_FixtureNo,
                'fixture_name': createReusable_FixtureName,
                'fixture_type': '',
                'fixture_price': createReusable_FixturePrice,
                'fixture_date': createReusable_FixtureDate,
                'mainImage': reusableImgBin[0],
                'mainImageName': reusableImg[0]
            };

            jdata = JSON.stringify(jdata);

            var requestCheck = confirm(isReuse ? '재사용 비품을 등록하시겠습니까?' : '나눔 물품을 등록하시겠습니까?');

            if (requestCheck) {
                $.ajax({
                    url: endpoint,
                    dataType: 'json',
                    type: 'POST',
                    data: {data: jdata},
                    success: function(result) {
                        if (result.sucess) {
                            // 메인 데이터 저장 성공 후 이미지 저장
                            if (reusableImg.length >= 1) {
                                const img_data = {
                                    idx: result.reus_id,
                                    reusableImg: reusableImg,
                                    reusableImgBin: reusableImgBin
                                };

                                $.ajax({
                                    url: '/reusableImg_set',
                                    dataType: 'json',
                                    type: 'POST',
                                    data: {data: img_data},
                                    success: function(imgResult) {
                                        if (imgResult.success) {
                                            alert('등록이 완료되었습니다!');
                                            closeShareModal();
                                            window.location.reload();
                                        } else {
                                            console.error('Image save error:', imgResult.error);
                                            alert('이미지 저장 중 오류가 발생했습니다.');
                                        }
                                    },
                                    error: function(xhr, status, error) {
                                        console.error('Image save ajax error:', error);
                                        console.error('Status:', status);
                                        console.error('Response:', xhr.responseText);
                                        alert('이미지 저장 중 오류가 발생했습니다.');
                                    }
                                });
                            } else {
                                alert('등록이 완료되었습니다!');
                                closeShareModal();
                                window.location.reload();
                            }
                        } else {
                            console.error('Create error:', result.error);
                            console.error('Error details:', result.details);
                            alert('등록 중 오류가 발생했습니다: ' + (result.error || '알 수 없는 오류'));
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('Create ajax error:', error);
                        console.error('Status:', status);
                        console.error('Response:', xhr.responseText);
                        alert('등록 중 오류가 발생했습니다.');
                    }
                });
            } else {
                alert('등록이 취소되었습니다.');
            }
        }


    // 사진 등록 post로 받는 거 까지 로직 추가 여기는 아님 

        // 모달 닫기 버튼들에 대한 이벤트 리스너 추가
        document.getElementById('modalCloseBtn').addEventListener('click', resetAndCloseModal);
        document.getElementById('modalCancelBtn').addEventListener('click', resetAndCloseModal);

        // 모달을 초기화하고 닫는 함수
        function resetAndCloseModal() {
            resetAllInputs();
            
            // Auto_input 클래스를 가진 모든 disabled 입력 필드 초기화
            const autoInputs = document.querySelectorAll('input.Auto_input[disabled]');
            autoInputs.forEach(input => {
                input.value = '';
            });
            
            // Direct_input 클래스를 가진 모든 입력 필드 초기화
            const directInputs = document.querySelectorAll('.Direct_input');
            directInputs.forEach(input => {
                input.value = '';
            });
            
            // 물품등급 select 초기화
            const rankSelect = document.getElementById('createReusable_Rank');
            if (rankSelect) rankSelect.selectedIndex = 0;
            
            closeShareModal();
        }

        // 이미지 초기화 함수 추가
        function resetImagePreviews() {
            const previews = ['imgShareSet1', 'imgShareSet2', 'imgShareSet3'];
            previews.forEach(id => {
                const element = document.getElementById(id);
                if (element) {
                    element.innerHTML = '';
                }
            });
            imgCnt = 0;
            reusableImg = [];
            reusableImgBin = [];
        }

        // 모든 입력 필드 초기화 함수 추가
        function resetAllInputs() {
            // 제목 초기화
            const titleInput = document.getElementById('createReusable_Name');
            if (titleInput) titleInput.value = '';
            
            // 내용 초기화
            const memoInput = document.getElementById('createShareMemo');
            if (memoInput) memoInput.value = '';
            
            // 이미지 미리보기 초기화
            resetImagePreviews();
            
            // 체크박스 초기화
            const checkboxes = document.querySelectorAll('.checkbox_input');
            checkboxes.forEach(checkbox => checkbox.checked = false);
        }

</script>
